// This model was generated by Lumber. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v5/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v5/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const Appointments = sequelize.define('appointments', {
    startAt: {
      type: DataTypes.DATE,
    },
    duration: {
      type: DataTypes.INTEGER,
    },
    finishAt: {
      type: DataTypes.DATE,
    },
    observation: {
      type: DataTypes.STRING,
    },
    status: {
      type: DataTypes.ENUM(
        'started',
        'opened',
        'confirmed',
        'payed',
        'waiting rate',
        'finished',
        'canceled',
      ),
      defaultValue: Sequelize.literal('opened'),
    },
    value: {
      type: DataTypes.DOUBLE,
    },
    address: {
      type: DataTypes.STRING,
    },
    customerRating: {
      type: DataTypes.BOOLEAN,
    },
    providerRating: {
      type: DataTypes.BOOLEAN,
    },
    createdAt: {
      type: DataTypes.DATE,
    },
    payedAt: {
      type: DataTypes.DATE,
    },
    startedAt: {
      type: DataTypes.DATE,
    },
    finishedAt: {
      type: DataTypes.DATE,
    },
    updatedAt: {
      type: DataTypes.DATE,
    },
  }, {
    tableName: 'appointments',
    underscored: true,
    schema: process.env.DATABASE_SCHEMA,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v5/reference-guide/relationships#adding-relationships.
  Appointments.associate = (models) => {
    Appointments.belongsTo(models.customers, {
      foreignKey: {
        name: 'customerId',
        field: 'customer_id',
      },
      as: 'customer',
    });
    Appointments.belongsTo(models.providers, {
      foreignKey: {
        name: 'providerId',
        field: 'provider_id',
      },
      as: 'provider',
    });
    Appointments.belongsTo(models.provider_services, {
      foreignKey: {
        name: 'providerServiceId',
        field: 'provider_service_id',
      },
      as: 'providerService',
    });
  };

  return Appointments;
};
